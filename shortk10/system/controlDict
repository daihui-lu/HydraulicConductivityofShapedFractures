/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
libs ("libPorousBJS.so");

application     simpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         100000;

deltaT          1;

writeControl    runTime;

writeInterval   1000;

purgeWrite      0;

writeFormat     ascii;

writePrecision   8;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{

    //- This function writes the permeation velocity as a function of the
    //  x-coordinate.
    //  Output is in the format x-coordinate, velocity, z coordinate
    permeationV
    {
        libs        ("libutilityFunctionObjects.so");

        type coded;

        name permeationV;
        codeWrite
        #{
            //- Lookup U
            const volVectorField& U = mesh().lookupObject<volVectorField>("U");

            //- Get wall patch
            label patchId = mesh().boundaryMesh().findPatchID("walls");

            //- Get velocity field at the boundary
            const fvPatchVectorField& UBf = U.boundaryField()[patchId];

            //- The permeation velocity is simply the velocity normal to the
            //  patch
            const scalarField V = UBf&UBf.patch().nf();

            //- This vector represents the spatial coordinates of the faces
            const vectorField x = UBf.patch().Cf();

            //- Write file if it is time to write
            //  This is csv format
            if(mesh().time().write())
            {
                std::ofstream file;
                file.open("permeationVel.csv", std::ios::out | std::ios::trunc);

                //- Write all the faces
                forAll(x,xi)
                {
                   file<< x[xi][0]  //- x coordinate
                       << " , " << V[xi] //- Permeation velocity
                       << " , " << x[xi][2] << "\n"; //- z coordinate
                }
            }
        #};

    }

}

// ************************************************************************* //
