/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
libs ("libPorousBJS.so")

application     simpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         100000;

deltaT          1;

writeControl    runTime;

writeInterval   10;

purgeWrite      0;

writeFormat     ascii;

writePrecision   8;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{

    permeationV
    {
        libs        ("libutilityFunctionObjects.so");

        type coded;
        // Name of on-the-fly generated functionObject
        name permeationV;
        codeWrite
        #{
            // Lookup U
            const volVectorField& U = mesh().lookupObject<volVectorField>("U");

            //Get outlet patch
	        label patchId = mesh().boundaryMesh().findPatchID("walls");
            const fvPatchVectorField& UBf = U.boundaryField()[patchId];

	        const scalarField V = UBf&UBf.patch().nf();
            const vectorField x = UBf.patch().Cf();


            if(mesh().time().write())
            {
                std::ofstream file;
                file.open("permeationVel.dat", std::ios::out | std::ios::trunc);
                forAll(x,xi)
                {
                    file << x[xi][2]
                        << " " << V[xi] <<"\n";
                }
            }
        #};

    }


}

// ************************************************************************* //
